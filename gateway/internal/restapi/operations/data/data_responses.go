// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kshamko/tt/gateway/internal/models"
)

// DataOKCode is the HTTP code returned for type DataOK
const DataOKCode int = 200

/*DataOK A successful response.

swagger:response dataOK
*/
type DataOK struct {

	/*
	  In: Body
	*/
	Payload *models.Data `json:"body,omitempty"`
}

// NewDataOK creates DataOK with default headers values
func NewDataOK() *DataOK {

	return &DataOK{}
}

// WithPayload adds the payload to the data o k response
func (o *DataOK) WithPayload(payload *models.Data) *DataOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the data o k response
func (o *DataOK) SetPayload(payload *models.Data) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DataOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DataNotFoundCode is the HTTP code returned for type DataNotFound
const DataNotFoundCode int = 404

/*DataNotFound data not found

swagger:response dataNotFound
*/
type DataNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIInvalidResponse `json:"body,omitempty"`
}

// NewDataNotFound creates DataNotFound with default headers values
func NewDataNotFound() *DataNotFound {

	return &DataNotFound{}
}

// WithPayload adds the payload to the data not found response
func (o *DataNotFound) WithPayload(payload *models.APIInvalidResponse) *DataNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the data not found response
func (o *DataNotFound) SetPayload(payload *models.APIInvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DataNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DataInternalServerErrorCode is the HTTP code returned for type DataInternalServerError
const DataInternalServerErrorCode int = 500

/*DataInternalServerError Error response

swagger:response dataInternalServerError
*/
type DataInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIInvalidResponse `json:"body,omitempty"`
}

// NewDataInternalServerError creates DataInternalServerError with default headers values
func NewDataInternalServerError() *DataInternalServerError {

	return &DataInternalServerError{}
}

// WithPayload adds the payload to the data internal server error response
func (o *DataInternalServerError) WithPayload(payload *models.APIInvalidResponse) *DataInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the data internal server error response
func (o *DataInternalServerError) SetPayload(payload *models.APIInvalidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DataInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
